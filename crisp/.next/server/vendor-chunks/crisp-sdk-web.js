"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/crisp-sdk-web";
exports.ids = ["vendor-chunks/crisp-sdk-web"];
exports.modules = {

/***/ "(ssr)/../node_modules/crisp-sdk-web/dist/crisp.esm.js":
/*!*******************************************************!*\
  !*** ../node_modules/crisp-sdk-web/dist/crisp.esm.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatboxColors: () => (/* binding */ ChatboxColors),\n/* harmony export */   ChatboxPosition: () => (/* binding */ ChatboxPosition),\n/* harmony export */   Crisp: () => (/* binding */ singleton),\n/* harmony export */   CrispClass: () => (/* binding */ Crisp),\n/* harmony export */   EventsColors: () => (/* binding */ EventsColors)\n/* harmony export */ });\nvar CrispMessage = /** @class */ (function () {\n    function CrispMessage(crisp) {\n        this.parent = crisp;\n    }\n    CrispMessage.prototype.setMessageText = function (content) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"set\", \"message:text\", [content]]);\n    };\n    CrispMessage.prototype.send = function (type, content) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"do\", \"message:send\", [type, content]]);\n    };\n    CrispMessage.prototype.sendText = function (content) {\n        this.send(\"text\", content);\n    };\n    CrispMessage.prototype.sendFile = function (content) {\n        this.send(\"file\", content);\n    };\n    CrispMessage.prototype.sendAnimation = function (content) {\n        this.send(\"animation\", content);\n    };\n    CrispMessage.prototype.sendAudio = function (content) {\n        this.send(\"audio\", content);\n    };\n    CrispMessage.prototype.show = function (type, content) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"do\", \"message:show\", [type, content]]);\n    };\n    CrispMessage.prototype.showText = function (content) {\n        this.show(\"text\", content);\n    };\n    CrispMessage.prototype.showFile = function (content) {\n        this.show(\"file\", content);\n    };\n    CrispMessage.prototype.showAnimation = function (content) {\n        this.show(\"animation\", content);\n    };\n    CrispMessage.prototype.showAudio = function (content) {\n        this.show(\"audio\", content);\n    };\n    CrispMessage.prototype.showPicker = function (content) {\n        this.show(\"picker\", content);\n    };\n    CrispMessage.prototype.showField = function (content) {\n        this.show(\"field\", content);\n    };\n    CrispMessage.prototype.showCarousel = function (content) {\n        this.show(\"carousel\", content);\n    };\n    CrispMessage.prototype.markAsRead = function () {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"do\", \"message:read\"]);\n    };\n    CrispMessage.prototype.startThread = function (name) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"do\", \"message:thread:start\", [name]]);\n    };\n    CrispMessage.prototype.endThread = function (name) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"do\", \"message:thread:end\", [name]]);\n    };\n    CrispMessage.prototype.onMessageSent = function (callback) {\n        this.parent.createSingletonIfNecessary();\n        this.offMessageSent();\n        window.$crisp.push([\"on\", \"message:sent\", callback]);\n    };\n    CrispMessage.prototype.offMessageSent = function () {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"off\", \"message:sent\"]);\n    };\n    CrispMessage.prototype.onMessageReceived = function (callback) {\n        this.parent.createSingletonIfNecessary();\n        this.offMessageReceived();\n        window.$crisp.push([\"on\", \"message:received\", callback]);\n    };\n    CrispMessage.prototype.offMessageReceived = function () {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"off\", \"message:received\"]);\n    };\n    CrispMessage.prototype.onMessageComposeSent = function (callback) {\n        this.parent.createSingletonIfNecessary();\n        this.offMessageComposeSent();\n        window.$crisp.push([\"on\", \"message:compose:sent\", callback]);\n    };\n    CrispMessage.prototype.offMessageComposeSent = function () {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"off\", \"message:compose:sent\"]);\n    };\n    CrispMessage.prototype.onMessageComposeReceived = function (callback) {\n        this.parent.createSingletonIfNecessary();\n        this.offMessageComposeReceived();\n        window.$crisp.push([\"on\", \"message:compose:received\", callback]);\n    };\n    CrispMessage.prototype.offMessageComposeReceived = function () {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"off\", \"message:compose:received\"]);\n    };\n    return CrispMessage;\n}());\n\nvar CrispUser = /** @class */ (function () {\n    function CrispUser(crisp) {\n        this.parent = crisp;\n    }\n    CrispUser.prototype.setNickname = function (nickname) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"set\", \"user:nickname\", [nickname]]);\n    };\n    CrispUser.prototype.setEmail = function (email, hmac) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"set\", \"user:email\", [email, hmac]]);\n    };\n    CrispUser.prototype.setPhone = function (phone) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"set\", \"user:phone\", [phone]]);\n    };\n    CrispUser.prototype.setAvatar = function (avatar) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"set\", \"user:avatar\", [avatar]]);\n    };\n    CrispUser.prototype.setCompany = function (name, data) {\n        var _payload = {};\n        if (data) {\n            if (data.url) {\n                _payload.url = data.url;\n            }\n            if (data.description) {\n                _payload.description = data.description;\n            }\n            if (data.employment) {\n                _payload.employment = [\n                    data.employment.title\n                ];\n                if (data.employment.role) {\n                    _payload.employment.push(data.employment.role);\n                }\n            }\n        }\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"set\", \"user:company\", [name, _payload]]);\n    };\n    CrispUser.prototype.getEmail = function () {\n        if (!this.parent.isCrispInjected()) {\n            return null;\n        }\n        return window.$crisp.get(\"user:email\");\n    };\n    CrispUser.prototype.getPhone = function () {\n        if (!this.parent.isCrispInjected()) {\n            return null;\n        }\n        return window.$crisp.get(\"user:phone\");\n    };\n    CrispUser.prototype.getNickname = function () {\n        if (!this.parent.isCrispInjected()) {\n            return null;\n        }\n        return window.$crisp.get(\"user:nickname\");\n    };\n    CrispUser.prototype.getAvatar = function () {\n        if (!this.parent.isCrispInjected()) {\n            return null;\n        }\n        return window.$crisp.get(\"user:avatar\");\n    };\n    CrispUser.prototype.getCompany = function () {\n        if (!this.parent.isCrispInjected()) {\n            return null;\n        }\n        return window.$crisp.get(\"user:company\");\n    };\n    CrispUser.prototype.onEmailChanged = function (callback) {\n        if (this.parent.isCrispInjected()) {\n            this.offEmailChanged();\n            window.$crisp.push([\"on\", \"user:email:changed\", callback]);\n        }\n    };\n    CrispUser.prototype.offEmailChanged = function () {\n        if (this.parent.isCrispInjected()) {\n            window.$crisp.push([\"off\", \"user:email:changed\"]);\n        }\n    };\n    CrispUser.prototype.onPhoneChanged = function (callback) {\n        if (this.parent.isCrispInjected()) {\n            this.offPhoneChanged();\n            window.$crisp.push([\"on\", \"user:phone:changed\", callback]);\n        }\n    };\n    CrispUser.prototype.offPhoneChanged = function () {\n        if (this.parent.isCrispInjected()) {\n            window.$crisp.push([\"off\", \"user:phone:changed\"]);\n        }\n    };\n    CrispUser.prototype.onNicknameChanged = function (callback) {\n        if (this.parent.isCrispInjected()) {\n            this.offNicknameChanged();\n            window.$crisp.push([\"on\", \"user:nickname:changed\", callback]);\n        }\n    };\n    CrispUser.prototype.offNicknameChanged = function () {\n        if (this.parent.isCrispInjected()) {\n            window.$crisp.push([\"off\", \"user:nickname:changed\"]);\n        }\n    };\n    CrispUser.prototype.onAvatarChanged = function (callback) {\n        if (this.parent.isCrispInjected()) {\n            this.offAvatarChanged();\n            window.$crisp.push([\"on\", \"user:avatar:changed\", callback]);\n        }\n    };\n    CrispUser.prototype.offAvatarChanged = function () {\n        if (this.parent.isCrispInjected()) {\n            window.$crisp.push([\"off\", \"user:avatar:changed\"]);\n        }\n    };\n    return CrispUser;\n}());\n\nvar CrispTrigger = /** @class */ (function () {\n    function CrispTrigger(crisp) {\n        this.parent = crisp;\n    }\n    CrispTrigger.prototype.run = function (name) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"do\", \"trigger:run\", [name]]);\n    };\n    return CrispTrigger;\n}());\n\nvar EventsColors;\n(function (EventsColors) {\n    EventsColors[\"Red\"] = \"red\";\n    EventsColors[\"Orange\"] = \"orange\";\n    EventsColors[\"Yellow\"] = \"yellow\";\n    EventsColors[\"Green\"] = \"green\";\n    EventsColors[\"Blue\"] = \"blue\";\n    EventsColors[\"Purple\"] = \"purple\";\n    EventsColors[\"Pink\"] = \"pink\";\n    EventsColors[\"Brown\"] = \"brown\";\n    EventsColors[\"Grey\"] = \"grey\";\n    EventsColors[\"Black\"] = \"black\";\n})(EventsColors || (EventsColors = {}));\nvar CrispSession = /** @class */ (function () {\n    function CrispSession(crisp) {\n        this.parent = crisp;\n    }\n    CrispSession.prototype.reset = function (reload) {\n        if (reload === void 0) { reload = false; }\n        if (this.parent.isCrispInjected()) {\n            window.$crisp.push([\"do\", \"session:reset\", [reload]]);\n        }\n    };\n    CrispSession.prototype.setSegments = function (segments, overwrite) {\n        this.parent.createSingletonIfNecessary();\n        $crisp.push([\"set\", \"session:segments\", [segments, overwrite]]);\n    };\n    CrispSession.prototype.setData = function (data) {\n        var _this = this;\n        var _payload = [];\n        Object.entries(data).forEach(function (item) {\n            if (_this.isValidDataValue(item[0])) {\n                _payload.push([item[0], item[1]]);\n            }\n        });\n        this.parent.createSingletonIfNecessary();\n        $crisp.push([\"set\", \"session:data\", [_payload]]);\n    };\n    CrispSession.prototype.pushEvent = function (name, data, color) {\n        if (data === void 0) { data = {}; }\n        if (color === void 0) { color = EventsColors.Blue; }\n        if (this.parent.isCrispInjected()) {\n            window.$crisp.push([\"set\", \"session:event\", [[[name, data, color]]]]);\n        }\n    };\n    CrispSession.prototype.getData = function (key) {\n        if (!this.parent.isCrispInjected()) {\n            return undefined;\n        }\n        return window.$crisp.get(\"session:data\", key);\n    };\n    CrispSession.prototype.getIdentifier = function () {\n        if (!this.parent.isCrispInjected()) {\n            return null;\n        }\n        return window.$crisp.get(\"session:identifier\");\n    };\n    CrispSession.prototype.onLoaded = function (callback) {\n        this.parent.createSingletonIfNecessary();\n        this.offLoaded();\n        window.$crisp.push([\"on\", \"session:loaded\", callback]);\n    };\n    CrispSession.prototype.offLoaded = function () {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"off\", \"session:loaded\"]);\n    };\n    CrispSession.prototype.isValidDataValue = function (value) {\n        return (typeof value === \"string\" ||\n            typeof value === \"number\" ||\n            typeof value === \"boolean\");\n    };\n    return CrispSession;\n}());\n\nvar CrispChat = /** @class */ (function () {\n    function CrispChat(crisp) {\n        this.parent = crisp;\n    }\n    CrispChat.prototype.show = function () {\n        this.parent.autoInjectIfNecessary();\n        window.$crisp.push([\"do\", \"chat:show\"]);\n    };\n    CrispChat.prototype.hide = function () {\n        this.parent.autoInjectIfNecessary();\n        window.$crisp.push([\"do\", \"chat:hide\"]);\n    };\n    CrispChat.prototype.open = function () {\n        this.parent.autoInjectIfNecessary();\n        window.$crisp.push([\"do\", \"chat:open\"]);\n    };\n    CrispChat.prototype.close = function () {\n        if (this.parent.isCrispInjected()) {\n            window.$crisp.push([\"do\", \"chat:close\"]);\n        }\n    };\n    CrispChat.prototype.setHelpdeskView = function () {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"do\", \"helpdesk:search\"]);\n    };\n    CrispChat.prototype.openHelpdeskArticle = function (locale, slug, title, category) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"do\", \"helpdesk:article:open\", [\n                locale,\n                slug,\n                title,\n                category\n            ]]);\n    };\n    CrispChat.prototype.queryHelpdesk = function (query) {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"do\", \"helpdesk:query\", [query]]);\n    };\n    CrispChat.prototype.unreadCount = function () {\n        if (!this.parent.isCrispInjected()) {\n            return 0;\n        }\n        return window.$crisp.get(\"chat:unread:count\");\n    };\n    CrispChat.prototype.isChatOpened = function () {\n        if (!this.parent.isCrispInjected()) {\n            return false;\n        }\n        return window.$crisp.is(\"chat:opened\");\n    };\n    CrispChat.prototype.isVisible = function () {\n        if (!this.parent.isCrispInjected()) {\n            return false;\n        }\n        return window.$crisp.is(\"chat:visible\");\n    };\n    CrispChat.prototype.onChatInitiated = function (callback) {\n        this.parent.createSingletonIfNecessary();\n        this.offChatInitiated();\n        window.$crisp.push([\"on\", \"chat:initiated\", callback]);\n    };\n    CrispChat.prototype.offChatInitiated = function () {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"off\", \"chat:initiated\"]);\n    };\n    CrispChat.prototype.onChatOpened = function (callback) {\n        this.parent.createSingletonIfNecessary();\n        this.offChatOpened();\n        window.$crisp.push([\"on\", \"chat:opened\", callback]);\n    };\n    CrispChat.prototype.offChatOpened = function () {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"off\", \"chat:opened\"]);\n    };\n    CrispChat.prototype.onChatClosed = function (callback) {\n        this.parent.createSingletonIfNecessary();\n        this.offChatClosed();\n        window.$crisp.push([\"on\", \"chat:closed\", callback]);\n    };\n    CrispChat.prototype.offChatClosed = function () {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"off\", \"chat:closed\"]);\n    };\n    CrispChat.prototype.onHelpdeskQueried = function (callback) {\n        this.parent.createSingletonIfNecessary();\n        this.offHelpdeskQueried();\n        window.$crisp.push([\"on\", \"helpdesk:queried\", callback]);\n    };\n    CrispChat.prototype.offHelpdeskQueried = function () {\n        this.parent.createSingletonIfNecessary();\n        window.$crisp.push([\"off\", \"helpdesk:queried\"]);\n    };\n    return CrispChat;\n}());\n\nvar ChatboxColors;\n(function (ChatboxColors) {\n    ChatboxColors[\"Default\"] = \"default\";\n    ChatboxColors[\"Amber\"] = \"amber\";\n    ChatboxColors[\"Black\"] = \"black\";\n    ChatboxColors[\"Blue\"] = \"blue\";\n    ChatboxColors[\"BlueGrey\"] = \"blue_grey\";\n    ChatboxColors[\"LightBlue\"] = \"light_blue\";\n    ChatboxColors[\"Brown\"] = \"brown\";\n    ChatboxColors[\"Cyan\"] = \"cyan\";\n    ChatboxColors[\"Green\"] = \"green\";\n    ChatboxColors[\"LightGreen\"] = \"light_green\";\n    ChatboxColors[\"Grey\"] = \"grey\";\n    ChatboxColors[\"Indigo\"] = \"indigo\";\n    ChatboxColors[\"Orange\"] = \"orange\";\n    ChatboxColors[\"DeepOrange\"] = \"deep_orange\";\n    ChatboxColors[\"Pink\"] = \"pink\";\n    ChatboxColors[\"Purple\"] = \"purple\";\n    ChatboxColors[\"DeepPurple\"] = \"deep_purple\";\n    ChatboxColors[\"Red\"] = \"red\";\n    ChatboxColors[\"Teal\"] = \"teal\";\n})(ChatboxColors || (ChatboxColors = {}));\nvar ChatboxPosition;\n(function (ChatboxPosition) {\n    ChatboxPosition[\"Left\"] = \"left\";\n    ChatboxPosition[\"Right\"] = \"right\";\n})(ChatboxPosition || (ChatboxPosition = {}));\nvar Crisp = /** @class */ (function () {\n    function Crisp() {\n        // Options\n        this.clientUrl = \"https://client.crisp.chat/l.js\";\n        this.websiteId = \"\";\n        this.autoload = true;\n        // States\n        this.injected = false;\n        this.chat = new CrispChat(this);\n        this.session = new CrispSession(this);\n        this.user = new CrispUser(this);\n        this.message = new CrispMessage(this);\n        this.trigger = new CrispTrigger(this);\n    }\n    Crisp.prototype.configure = function (websiteId, options) {\n        if (options === void 0) { options = {}; }\n        this.websiteId = websiteId;\n        this.tokenId = options.tokenId;\n        this.locale = options.locale;\n        this.sessionMerge = options.sessionMerge;\n        this.cookieDomain = options.cookieDomain;\n        this.cookieExpire = options.cookieExpire;\n        this.lockFullview = options.lockFullview;\n        this.lockMaximized = options.lockMaximized;\n        this.safeMode = options.safeMode;\n        if (options.clientUrl !== undefined) {\n            this.clientUrl = options.clientUrl;\n        }\n        if (options.autoload !== undefined) {\n            this.autoload = options.autoload;\n        }\n        // Autoload Crisp if option is enabled\n        if (this.autoload) {\n            this.load();\n        }\n    };\n    Crisp.prototype.load = function () {\n        var _head = document.getElementsByTagName(\"head\");\n        this.createSingletonIfNecessary();\n        // Prevents from loading Crisp twice\n        if (this.isCrispInjected() === true) {\n            return;\n        }\n        if (!this.websiteId) {\n            throw new Error(\"websiteId must be set before loading Crisp\");\n        }\n        window.CRISP_WEBSITE_ID = this.websiteId;\n        window.CRISP_RUNTIME_CONFIG = {};\n        if (this.tokenId) {\n            window.CRISP_TOKEN_ID = this.tokenId;\n        }\n        if (this.sessionMerge) {\n            window.CRISP_RUNTIME_CONFIG.session_merge = true;\n        }\n        if (this.locale) {\n            window.CRISP_RUNTIME_CONFIG.locale = this.locale;\n        }\n        if (this.lockFullview) {\n            window.CRISP_RUNTIME_CONFIG.lock_full_view = true;\n        }\n        if (this.lockMaximized) {\n            window.CRISP_RUNTIME_CONFIG.lock_maximized = true;\n        }\n        if (this.cookieDomain) {\n            window.CRISP_COOKIE_DOMAIN = this.cookieDomain;\n        }\n        if (this.cookieExpire) {\n            window.CRISP_COOKIE_EXPIRE = this.cookieExpire;\n        }\n        if (!_head || !_head[0]) {\n            return this.deferredLoading();\n        }\n        if (this.safeMode === true) {\n            this.setSafeMode(true);\n        }\n        var _script = document.createElement(\"script\");\n        _script.src = this.clientUrl;\n        _script.async = true;\n        _head[0].appendChild(_script);\n        this.injected = true;\n    };\n    Crisp.prototype.setTokenId = function (tokenId) {\n        this.tokenId = tokenId;\n        // Refresh injected token?\n        if (this.isCrispInjected() === true) {\n            if (tokenId) {\n                window.CRISP_TOKEN_ID = tokenId;\n            }\n            else {\n                delete window.CRISP_TOKEN_ID;\n            }\n        }\n    };\n    Crisp.prototype.setZIndex = function (zIndex) {\n        this.createSingletonIfNecessary();\n        window.$crisp.push([\"config\", \"container:index\", [zIndex]]);\n    };\n    Crisp.prototype.setColorTheme = function (color) {\n        this.createSingletonIfNecessary();\n        window.$crisp.push([\"config\", \"color:theme\", [color]]);\n    };\n    Crisp.prototype.setHideOnAway = function (enabled) {\n        this.createSingletonIfNecessary();\n        window.$crisp.push([\"config\", \"hide:on:away\", [enabled]]);\n    };\n    Crisp.prototype.setHideOnMobile = function (enabled) {\n        this.createSingletonIfNecessary();\n        window.$crisp.push([\"config\", \"hide:on:mobile\", [enabled]]);\n    };\n    Crisp.prototype.setPosition = function (position) {\n        this.createSingletonIfNecessary();\n        $crisp.push([\"config\", \"position:reverse\", [\n                position === ChatboxPosition.Left\n            ]]);\n    };\n    Crisp.prototype.setAvailabilityTooltip = function (enabled) {\n        this.createSingletonIfNecessary();\n        window.$crisp.push([\"config\", \"availability:tooltip\", [enabled]]);\n    };\n    Crisp.prototype.setVacationMode = function (enabled) {\n        this.createSingletonIfNecessary();\n        window.$crisp.push([\"config\", \"hide:vacation\", [enabled]]);\n    };\n    Crisp.prototype.setSafeMode = function (safe) {\n        if (safe === void 0) { safe = true; }\n        this.createSingletonIfNecessary();\n        window.$crisp.push([\"safe\", safe]);\n    };\n    Crisp.prototype.muteSound = function (mute) {\n        this.createSingletonIfNecessary();\n        window.$crisp.push([\"config\", \"sound:mute\", [mute]]);\n    };\n    Crisp.prototype.toggleOperatorCount = function (enabled) {\n        this.createSingletonIfNecessary();\n        window.$crisp.push([\"config\", \"show:operator:count\", [enabled]]);\n    };\n    Crisp.prototype.onWebsiteAvailabilityChanged = function (callback) {\n        this.createSingletonIfNecessary();\n        this.offWebsiteAvailabilityChanged();\n        window.$crisp.push([\"on\", \"website:availability:changed\", callback]);\n    };\n    Crisp.prototype.offWebsiteAvailabilityChanged = function () {\n        this.createSingletonIfNecessary();\n        window.$crisp.push([\"off\", \"website:availability:changed\"]);\n    };\n    Crisp.prototype.createSingletonIfNecessary = function () {\n        // Assigns $crisp singleton\n        if (window.$crisp === undefined) {\n            window.$crisp = [];\n        }\n    };\n    Crisp.prototype.autoInjectIfNecessary = function () {\n        if (!this.isCrispInjected()) {\n            this.load();\n        }\n    };\n    Crisp.prototype.isCrispInjected = function () {\n        // Check if Crisp was injected (either from the Web SDK, or from another \\\n        //   source)\n        if (this.injected === true || (window.$crisp && window.$crisp.is)) {\n            return true;\n        }\n        return false;\n    };\n    Crisp.prototype.deferredLoading = function () {\n        var _this = this;\n        document.addEventListener(\"DOMContentLoaded\", function () {\n            _this.load();\n        });\n    };\n    return Crisp;\n}());\nvar singleton = new Crisp();\n\n\n//# sourceMappingURL=crisp.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/crisp-sdk-web/dist/crisp.esm.js\n");

/***/ })

};
;